#include <iostream>
#include <windows.h>
#include <graphics.h>
#include <stdlib.h>
#include <stdio.h>
#include <time.h>

using namespace std;

void truk(int xp, int yp, int sc)
{
    float x[100],y[100];
    x[0]=0;y[0]=1;
    x[1]=3;y[1]=1;
    x[2]=3;y[2]=10;
    x[3]=0;y[3]=10;
    x[4]=2.9;y[4]=1;
    x[5]=2.9;y[5]=10;
    x[6]=0;y[6]=1.1;
    x[7]=2.9;y[7]=1.1;
    x[8]=0;y[8]=9.9;
    x[9]=2.9;y[9]=9.9;
    x[10]=0.9;y[10]=1;
    x[11]=0.9;y[11]=0.8;
    x[12]=1.1;y[12]=0.8;
    x[13]=1.1;y[13]=1;
    x[14]=0.8;y[14]=10;
    x[15]=0.8;y[15]=10.5;
    x[16]=1.2;y[16]=10.5;
    x[17]=1.2;y[17]=10;
    x[18]=2;y[18]=1;
    x[19]=2.1;y[19]=0.9;
    x[20]=2.4;y[20]=0.9;
    x[21]=2.5;y[21]=1;
    x[22]=2.6;y[22]=0.9;
    x[23]=2.9;y[23]=0.9;
    x[24]=3;y[24]=1;

    setcolor(WHITE);
    setfillstyle(SOLID_FILL,GREEN);
    for(int i=0;i<3;i++)
        {
            line(x[i]*sc+xp,y[i]*sc+yp,x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=0;i<3;i++)
        {
            line(-x[i]*sc+xp,y[i]*sc+yp,-x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
    floodfill(1.5*sc+xp,3*sc+yp,WHITE);
    floodfill(1.5*sc+xp,6*sc+yp,WHITE);
    floodfill(1.5*sc+xp,9*sc+yp,WHITE);

        for(int i=4;i<5;i++)
        {
            line(x[i]*sc+xp,y[i]*sc+yp,x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=4;i<5;i++)
        {
            line(-x[i]*sc+xp,y[i]*sc+yp,-x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=6;i<7;i++)
        {
            line(x[i]*sc+xp,y[i]*sc+yp,x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=6;i<7;i++)
        {
            line(-x[i]*sc+xp,y[i]*sc+yp,-x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=8;i<9;i++)
        {
            line(x[i]*sc+xp,y[i]*sc+yp,x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=8;i<9;i++)
        {
            line(-x[i]*sc+xp,y[i]*sc+yp,-x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=10;i<13;i++)
        {
            line(x[i]*sc+xp,y[i]*sc+yp,x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=10;i<13;i++)
        {
            line(-x[i]*sc+xp,y[i]*sc+yp,-x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=14;i<17;i++)
        {
            line(x[i]*sc+xp,y[i]*sc+yp,x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=14;i<17;i++)
        {
            line(-x[i]*sc+xp,y[i]*sc+yp,-x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=18;i<24;i++)
        {
            line(x[i]*sc+xp,y[i]*sc+yp,x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=18;i<24;i++)
        {
            line(-x[i]*sc+xp,y[i]*sc+yp,-x[i+1]*sc+xp,y[i+1]*sc+yp);
        }

    x[25]=0;y[25]=10.5;
    x[26]=2.7;y[26]=10.5;
    x[27]=2.7;y[27]=10.5;
    x[28]=2.7;y[28]=12;
    x[29]=2.5;y[29]=11.5;
    x[30]=2.5;y[30]=10.9;
    x[31]=0;y[31]=10.9;
    x[32]=2.7;y[32]=12;
    x[33]=2.7;y[33]=13;
    x[34]=0;y[34]=13;
    x[35]=2.7;y[35]=12;
    x[36]=2.9;y[36]=12;

    setcolor(WHITE);
    setfillstyle(SOLID_FILL,DARKGRAY);
        for(int i=25;i<26;i++)
        {
            line(x[i]*sc+xp,y[i]*sc+yp,x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=25;i<26;i++)
        {
            line(-x[i]*sc+xp,y[i]*sc+yp,-x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=27;i<31;i++)
        {
            line(x[i]*sc+xp,y[i]*sc+yp,x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=27;i<31;i++)
        {
            line(-x[i]*sc+xp,y[i]*sc+yp,-x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=32;i<34;i++)
        {
            line(x[i]*sc+xp,y[i]*sc+yp,x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=32;i<34;i++)
        {
            line(-x[i]*sc+xp,y[i]*sc+yp,-x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=35;i<36;i++)
        {
            line(x[i]*sc+xp,y[i]*sc+yp,x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=35;i<36;i++)
        {
            line(-x[i]*sc+xp,y[i]*sc+yp,-x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
    floodfill(1.5*sc+xp,11.25*sc+yp,WHITE);

    x[37]=0;y[37]=11.8;
    x[38]=1.9;y[38]=11.8;
    x[39]=2.3;y[39]=12.5;
    x[40]=0;y[40]=12.5;

    setcolor(YELLOW);
    setfillstyle(SOLID_FILL,WHITE);
        for(int i=37;i<40;i++)
        {
            line(x[i]*sc+xp,y[i]*sc+yp,x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
        for(int i=37;i<40;i++)
        {
            line(-x[i]*sc+xp,y[i]*sc+yp,-x[i+1]*sc+xp,y[i+1]*sc+yp);
        }
    floodfill(1*sc+xp,12.2*sc+yp,YELLOW);

}

void rintangan(int xrin, int yrin, int sr)
{
    float xr[40],yr[40];
    xr[0]=0;yr[0]=3;
    xr[1]=2;yr[1]=3;
    xr[2]=2;yr[2]=4;
    xr[3]=0;yr[3]=4;
    xr[4]=1;yr[4]=3;
    xr[5]=1;yr[5]=2.5;
    xr[6]=1.5;yr[6]=2.5;
    xr[7]=1.5;yr[7]=3;
    xr[8]=1;yr[8]=4;
    xr[9]=1;yr[9]=7;
    xr[10]=1.5;yr[10]=7;
    xr[11]=1.5;yr[11]=4;
    xr[12]=0;yr[12]=3;
    xr[13]=1;yr[13]=4;
    xr[14]=0.5;yr[14]=3;
    xr[15]=1.5;yr[15]=4;
    xr[16]=1;yr[16]=3;
    xr[17]=2;yr[17]=4;

    setcolor(WHITE);
    setfillstyle(SOLID_FILL,BLUE);
    for(int j=0;j<3;j++)
        {
            line(xr[j]*sr+xrin,yr[j]*sr+yrin,xr[j+1]*sr+xrin,yr[j+1]*sr+yrin);
        }
        for(int j=0;j<3;j++)
        {
            line(-xr[j]*sr+xrin,yr[j]*sr+yrin,-xr[j+1]*sr+xrin,yr[j+1]*sr+yrin);
        }
    floodfill(0.25*sr+xrin,3.75*sr+yrin,WHITE);

    setfillstyle(SOLID_FILL,BROWN);
        for(int j=4;j<7;j++)
        {
            line(xr[j]*sr+xrin,yr[j]*sr+yrin,xr[j+1]*sr+xrin,yr[j+1]*sr+yrin);
        }
        for(int j=4;j<7;j++)
        {
            line(-xr[j]*sr+xrin,yr[j]*sr+yrin,-xr[j+1]*sr+xrin,yr[j+1]*sr+yrin);
        }
        for(int j=8;j<11;j++)
        {
            line(xr[j]*sr+xrin,yr[j]*sr+yrin,xr[j+1]*sr+xrin,yr[j+1]*sr+yrin);
        }
        for(int j=8;j<11;j++)
        {
            line(-xr[j]*sr+xrin,yr[j]*sr+yrin,-xr[j+1]*sr+xrin,yr[j+1]*sr+yrin);
        }
    floodfill(1.25*sr+xrin,2.75*sr+yrin,WHITE);
    floodfill(1.25*sr+xrin,5*sr+yrin,WHITE);
    floodfill(1.25*sr+xrin,6*sr+yrin,WHITE);
    floodfill(-1.25*sr+xrin,2.75*sr+yrin,WHITE);
    floodfill(-1.25*sr+xrin,5*sr+yrin,WHITE);
    floodfill(-1.25*sr+xrin,6*sr+yrin,WHITE);

        for(int j=12;j<13;j++)
        {
            line(xr[j]*sr+xrin,yr[j]*sr+yrin,xr[j+1]*sr+xrin,yr[j+1]*sr+yrin);
        }
         for(int j=12;j<13;j++)
        {
            line(-xr[j]*sr+xrin,yr[j]*sr+yrin,-xr[j+1]*sr+xrin,yr[j+1]*sr+yrin);
        }
        for(int j=14;j<15;j++)
        {
            line(xr[j]*sr+xrin,yr[j]*sr+yrin,xr[j+1]*sr+xrin,yr[j+1]*sr+yrin);
        }
        for(int j=14;j<15;j++)
        {
            line(-xr[j]*sr+xrin,yr[j]*sr+yrin,-xr[j+1]*sr+xrin,yr[j+1]*sr+yrin);
        }
        for(int j=16;j<17;j++)
        {
            line(xr[j]*sr+xrin,yr[j]*sr+yrin,xr[j+1]*sr+xrin,yr[j+1]*sr+yrin);
        }
        for(int j=16;j<17;j++)
        {
            line(-xr[j]*sr+xrin,yr[j]*sr+yrin,-xr[j+1]*sr+xrin,yr[j+1]*sr+yrin);
        }
}

void gas(int xgas, int ygas, int sgas)
{
    float xb[40],yb[40];
    xb[0]=0;yb[0]=0.5;
    xb[1]=0;yb[1]=2.5;
    xb[2]=0.5;yb[2]=3;
    xb[3]=2;yb[3]=3;
    xb[4]=2.5;yb[4]=2.5;
    xb[5]=2.5;yb[5]=1;
    xb[6]=1.5;yb[6]=0;
    xb[7]=0.5;yb[7]=0;
    xb[8]=0;yb[8]=0.5;
    xb[9]=0.5;yb[9]=1;
    xb[10]=2;yb[10]=2.5;
    xb[11]=2;yb[11]=1;
    xb[12]=0.5;yb[12]=2.5;
    xb[13]=1.9;yb[13]=0.4;
    xb[14]=2.1;yb[14]=0.2;
    xb[15]=2.3;yb[15]=0.4;
    xb[16]=2.1;yb[16]=0.6;

    setcolor(WHITE);
    setfillstyle(SOLID_FILL,RED);
    for(int i=0;i<8;i++)
        {
            line(xb[i]*sgas+xgas,yb[i]*sgas+ygas,xb[i+1]*sgas+xgas,yb[i+1]*sgas+ygas);
        }
        for(int i=9;i<10;i++)
        {
            line(xb[i]*sgas+xgas,yb[i]*sgas+ygas,xb[i+1]*sgas+xgas,yb[i+1]*sgas+ygas);
        }
        for(int i=11;i<12;i++)
        {
            line(xb[i]*sgas+xgas,yb[i]*sgas+ygas,xb[i+1]*sgas+xgas,yb[i+1]*sgas+ygas);
        }
        for(int i=13;i<16;i++)
        {
            line(xb[i]*sgas+xgas,yb[i]*sgas+ygas,xb[i+1]*sgas+xgas,yb[i+1]*sgas+ygas);
        }
        floodfill(1*sgas+xgas,0.5*sgas+ygas,WHITE);
        floodfill(0.5*sgas+xgas,1.5*sgas+ygas,WHITE);
        floodfill(2*sgas+xgas,1.5*sgas+ygas,WHITE);
        floodfill(1*sgas+xgas,2.5*sgas+ygas,WHITE);
        floodfill(2.1*sgas+xgas,0.4*sgas+ygas,WHITE);
}

int main()
{
    int xp,yp,sc,sr,sgas,bn;
    int xrin[10],yrin[10],dy[10],xgas,ygas;
    int x=0;
    int y=0;
    int skor;
    int page=0;

    //deklarasi untuk score berdasarkan waktu
    int a1=0;
    char skr[999];
    double time_spent=0.0;

    //deklarasi bensin(kuantitas)
    int a2=500;
    char bsn[999];

    //deklarasi game over
    char go[999];

    //random tempat muncul rintangan dan kecepatannya
    for(int i=0;i<10;i++)
    {
        xrin[i]=rand()%1000;
        yrin[i]=600;
        dy[i]=rand()%5+1;
    }

    initwindow(1000,600);
    clock_t begin=clock();

    xp=300;
    yp=100;
    xgas=300;
    ygas=300;

    while(1)
    {
        setactivepage(page);
        setvisualpage(1-page);
        cleardevice();
        //perulangan bergeraknya rintangan dan kecepatannya
        for (int i=0;i<10;i++)
            {
                yrin[i]=yrin[i]-dy[i];
                if(yrin[i]==0)
                    {
                        yrin[i]=600;
                        xrin[i]=rand()%1000;
                    }
                rintangan(xrin[i],yrin[i],15);
            }

        gas(xgas,ygas,10);
        ygas=ygas-1;
        if(ygas<=0)
        {
            ygas=610;
            xgas=rand()%1000;
        }

        truk(xp,yp,10);

        //WASD
        if( GetAsyncKeyState(68) < 0 )
        {
            xp=xp+5;
        }
        if( GetAsyncKeyState(65) < 0 )
        {
            xp=xp-5;
        }
        if( GetAsyncKeyState(83) < 0 )
        {
            yp=yp+5;
        }
        if( GetAsyncKeyState(87) < 0 )
        {
            yp=yp-5;
        }
        if( GetAsyncKeyState(27) < 0 )
        {
            break;
        }

        //bensin hilang bila kena truk
        if((xgas>-3*10+xp)&&(xgas<3*10+xp)&&(ygas>0.8*10+yp)&&(ygas<13*10+yp))
        {
            ygas=0;
            a2=500;
        }

        //game over
        if(a2==0)
        {
            cleardevice();
            sprintf(go,"GAME OVER");
            settextstyle(8,0,5);
            outtextxy(375,300, go);
        }
        for(int i=0;i<10;i++)
        {
            if((xrin[i]>-3*10+xp)&&(xrin[i]<3*10+xp)&&(yrin[i]>0.8*10+yp)&&(yrin[i]<13*10+yp))
            {
                cleardevice();
                sprintf(go,"GAME OVER");
                settextstyle(8,0,5);
                outtextxy(375,300, go);
            }
        }

        clock_t end=clock();
        time_spent += (double)(end-begin)/CLOCKS_PER_SEC;

        //skor
        a1=time_spent*0.005;
        sprintf(skr,"Skor = %d", a1);
        setcolor(GREEN);
        settextstyle(8,0,1);
        outtextxy(10,10, skr);

        //bensin
        a2=a2-time_spent*0.000000005;
        sprintf(bsn,"Bensin = %d", a2);
        setcolor(GREEN);
        settextstyle(8,0,1);
        outtextxy(10,50, bsn);

        delay(10);
        page=1-page;
    }

    return 0;
}
